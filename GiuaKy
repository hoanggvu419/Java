//cau 1
interface IShape {
    double PI = 3.1416;

    void showInfo();
    double getArea();
    double getPerimeter();
}
class Circle implements IShape {
    private double radius;

    public Circle(double radius){
        this.radius = radius; 
    }

    @Override
    public double getArea() {
        return PI*radius*radius;
    }

    @Override
    public double getPerimeter() {
        return 2*radius*PI;
    }
    @Override
    public void showInfo() {
        System.out.println("Circle:");
        System.out.println("Radius:" + radius);
        System.out.println("Area: " + getArea());
        System.out.println("Perimeter: " + getPerimeter());
    }
}
class Rectangle implements IShape {
    private double length;
    private double width;


    public Rectangle(double length, double width){
        this.length = length;
        this.width = width; 

    }

    @Override
    public double getArea() {
        return length*width;
    }

    @Override
    public double getPerimeter() {
        return 2*(length + width);
    }
    @Override
    public void showInfo() {
        System.out.println("Rectangle:");
        System.out.println("Width:" + length);
        System.out.println("Length:" + length);
        System.out.println("Area: " + getArea());
        System.out.println("Perimeter: " + getPerimeter());
    }
}
public class giuaKyCau1 {
public static void main(String[] args) {
    IShape circle = new Circle(40.2);
    IShape rectangle = new Rectangle(25, 20);

    circle.showInfo();
    System.out.println();
    rectangle.showInfo();
}
}

//cau1

interface Animal{
    void eat();
    void showInfo();
}
interface Bird extends Animal {
    void fly();
}
interface Horse extends Animal {
    void run();
}
class Pegasus implements Bird, Horse{
    public String name;
    private int age;

    public Pegasus(String name, int age){
        this.name = name;
        this.age = age;
    }
    public int getAge() {
        return age;
    }
    public void setAge(int age) {
        this.age = age;
    }
    @Override
    public void fly(){
        System.out.println(name + "is flying");
    }
    @Override
    public void eat(){
        System.out.println(name + "is eating");
    }
    @Override
    public void run(){
        System.out.println(name + "is running");
    }
    @Override
    public void showInfo(){
        System.out.println("Name: " + name + ", Age: " + age);
    }
}

//scanner
import java.util.*;

public class de2Cau2 {
    public static void cau2() {
        Scanner scanner = new Scanner(System.in);
        try {
            System.out.print("nhap ho ten: ");
            String name = scanner.nextLine();
            
            System.out.print("nhap tuoi: ");
            int age = Integer.parseInt(scanner.nextLine());
            System.out.println("ten: " + name);
            System.out.println("tuoi: " + age);

        } catch (NumberFormatException e) {
            System.out.println("Loi: toi la so nguyen");
        } catch (Exception e) {
            System.out.println("loi: " + e.getMessage());
        } finally{
            scanner.close();
        }
    }
    public static void main(String[] args) {
        cau2();
    }
}


//cau2
import java.io.*;
public class giuaKyCau2 {
   public static void main(String[] args) {
    String fileName = "int.txt";

    try (DataOutputStream dos = new DataOutputStream(new FileOutputStream(fileName))) {
      dos.writeInt(10);
      dos.writeInt(15);
      dos.writeInt(20);
      dos.writeInt(25);
      System.out.println("da ghi 4 so nguyen");
    } catch(IOException e){
      e.printStackTrace();
    }
    try (DataInputStream dis = new DataInputStream(new FileInputStream(fileName))){
      int[] numbers = new int[4];
      for (int i = 0; i<4; i++){
         numbers[i] = dis.readInt();
      }
      int tong2So = numbers[0] + numbers[1];
      System.out.println("cac so nguyen: ");
      for(int i = 0; i<4 ; i++) {
         System.out.println(numbers[i]);
      }
      System.out.println("tong hai so dau: " + tong2So);
    } catch (Exception e) {
      e.printStackTrace();
    }
   } 
}

//cau3 
import java.io.*;

public class de2Cau3 {
    public static void cau3() {
        try {
            OutputStreamWriter writer = new OutputStreamWriter(new FileOutputStream("student.txt"), "UTF-8");
            writer.write("Vu Viet Hoang \n");
            writer.write("Vu van a \n");
            writer.write("nguyen hai anh \n");
            writer.close();
            System.out.println("da ghi xong ");

        } catch (IOException e) {
        System.out.println("loi khi ghi file: " + e.getMessage());
        }
        try {
            InputStreamReader reader = new InputStreamReader(new FileInputStream("student.txt"), "UTF-8");
            BufferedReader bufferedReader = new BufferedReader(reader);
            String line;
            System.out.println("noi dung file student.txt");
                while ((line = bufferedReader.readLine()) !=null){
                    System.out.println(line);
                }
                bufferedReader.close();
        } catch (Exception e) {
            System.out.println("loi khi doc: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        cau3();
    }
}


//cau3
import java.util.*;
import java.text.*;

public class giuaKyCau3 {
public static void main(String[] args) {
    Thread clockThread = new Thread(() ->{
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss");
        while (true) {
            String currentTime = sdf.format(new Date());
            System.out.println("Thoi gian hien tai: " + currentTime);
            try {
                Thread.sleep(1000);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    );
    Thread randomThread = new Thread(() ->{
        Random rand = new Random();
        int num = rand.nextInt(100) + 1;
        System.out.println("so ngau nhien: " + num );
    });
    clockThread.start();
    randomThread.start();
}
}

//cau4 thread
import java.util.*;

public class de2Cau4 {
    public static void cau4(){
        Random rand = new Random();
        Thread thread1 = new Thread(() -> {
            String ten = "hoang";
            while (true) {
                int index = rand.nextInt(ten.length());
                char c = ten.charAt(index);
                System.out.println("ky tu ngau nhien: " + c);
                try {
                    Thread.sleep(5000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                    break;
                }
            }
        });
        Thread thread2 = new Thread(() -> {
            int number = -1 * (rand.nextInt(10) +1);
            System.out.println("so ngau nhien: " + number);
        });
        thread1.start();
        thread2.start();
    }
    public static void main(String[] args) {
        cau4();
    }
}


import java.util.*;
public class giuaKyCau4 {
    public static void main(String[] args) {
        LinkedList<Integer> list = new LinkedList<>();
        Random rand = new Random();
        for (int i = 0; i < 8; i++) {
            list.add(rand.nextInt(100));
        }
        System.out.println("Danh sach ban dau: " + list);
        list.add(2, 25);
        System.out.println("da them 25 vao vi tri 2: " + list);
        list.removeIf(n -> n <30);
        System.out.println("da xoa cac phan tu nho hon 30: " + list);
        System.out.println("vi tri cac phan tu tu 40->80: ");
        for (int i = 0; i <list.size(); i++){
            int value = list.get(i);
            if (value >= 40 && value <= 80) {
                System.out.println(i + "");
            }
        }
    }
}

//cau 5 arraylist, map
public class de2Cau5 {
    public static void cau5(){
        ArrayList<Pegasus> list = new ArrayList<>();
        list.add(new Pegasus("Pegasus 1", 10));
        list.add(new Pegasus("Pegasus 2", 20));

        Map<Integer, Pegasus> map = new HashMap<>();
        int key = 1;
        for (Pegasus p : list) {
            map.put(key++, p);
        }
        System.out.println("danh sach pegasus trong map: ");
        for (Map.Entry<Integer, Pegasus> entry : map.entrySet()){
            System.out.println("key: " + entry.getKey() + " - ");
            entry.getValue().showInfo();
        }
    }
    public static void main(String[] args) {
        cau5();
    }
}

@FunctionalInterface 
        interface Sorter{
            void sort(int[] arr);
        }
public class giuaKyCau5 {
    public static void main(String[] args) {
        Sorter sorter = (arr) -> {
            for (int i =0; i<arr.length - 1; i++){
                for (int j =i+1; j<arr.length; j++){
                    if (arr[i] > arr[j]){
                        int temp = arr[i];
                        arr[i] = arr[j];
                        arr[j] = temp;
                    }
                }
            }
        };
        int[] arr = {4, 2, 7, 1, 9, 5};
        sorter.sort(arr);
        System.out.println("day sau khi sap xep la: " );
        for (int num : arr){
            System.out.print(num + " ");
        }
    }
}

//lọc: 
public static void main(String[] args) {
    List<Person> people = Arrays.asList(
        new Person("Alice", 20),
        new Person("Bob", 25),
        new Person("Charlie", 18),
        new Person("David", 22)
    );

    System.out.print("Những người lớn hơn 18 tuổi: ");
    people.stream()
        .filter(person -> person.getAge() > 18)
        .forEach(person -> System.out.print(person.getName() + ", "));
}

//scanner 
import java.util.HashMap;
import java.util.Scanner;

public class StudentScores {
    public static void main(String[] args) {
        HashMap<String, Integer> studentScores = new HashMap<>();
        Scanner scanner = new Scanner(System.in);

        do {
            System.out.print("Nhập tên sinh viên (nhập 'kết thúc' để kết thúc): ");
            String studentName = scanner.nextLine();
            if (studentName.equalsIgnoreCase("kết thúc")) break;

            System.out.print("Nhập điểm số của sinh viên: ");
            int score = scanner.nextInt();
            scanner.nextLine(); // Đọc bỏ dòng thừa sau nextInt()

            studentScores.put(studentName, score);
        } while (true);

        System.out.println("\nDanh sách sinh viên và điểm số:");
        studentScores.forEach((name, score) -> {
            System.out.println(name + ": " + score);
        });
    }
}

